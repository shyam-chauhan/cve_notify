{
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -272,
        64
      ],
      "id": "76e8ea51-c06b-41f3-a2c7-ce9115ba99fa",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1gVS5xIX80gvxKv65T8lnquQoUE5Rh5jQVJeg6PWM7H8",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1gVS5xIX80gvxKv65T8lnquQoUE5Rh5jQVJeg6PWM7H8/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        0,
        0
      ],
      "id": "929db7a0-6882-49d1-a3d5-57055f2e629a",
      "name": "get_data",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "fYlxjAt6tl6MuBCV",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://cvefeed.io/rssfeed/latest.xml",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        0,
        256
      ],
      "id": "eec5621c-58e8-45d0-a1b6-dc391df2cfd1",
      "name": "get_cve"
    },
    {
      "parameters": {
        "jsCode": "// Assuming this is running in an n8n Function node\n// Input data from the merge node is available as $input.all()\nfunction main() {\n  // Get the dynamic data from the merge node\n  const data = $input.all().map(item => item.json);\n\n  // Split the data into simple CVE list and detailed list\n  const simpleList = data.filter(item => 'row_number' in item && 'cve_id' in item);\n  const detailedList = data.filter(item => 'title' in item && 'link' in item);\n\n  // Extract CVE IDs from simple list\n  const simpleCVEs = new Set(simpleList.map(item => item.cve_id));\n\n  // Create a map of CVE to detailed object for quick lookup\n  const detailedMap = new Map();\n  detailedList.forEach(item => {\n    // Extract CVE ID from title\n    const cve = item.title.split(' - ')[0];\n\n    // Extract severity information from content\n    const severityMatch = item.content.match(/<strong>Severity:\\s*<\\/strong>\\s*([\\d.]+)\\s*\\|\\s*(\\w+)/i);\n    const severityScore = severityMatch ? parseFloat(severityMatch[1]) : null;\n    const severityLabel = severityMatch ? severityMatch[2] : null;\n\n    // Extract description from content with flexible regex\n    const descriptionMatch = item.content.match(/<strong>Description\\s*:?\\s*<\\/strong>\\s*([^<]+)/i);\n    const description = descriptionMatch ? descriptionMatch[1].trim() : null;\n\n    // Log for debugging if description is null\n    if (!description) {\n      console.log(`Failed to extract description for CVE ${cve}. Content: ${item.content}`);\n    }\n\n    detailedMap.set(cve, {\n      cve_id: cve, // Explicitly include the extracted CVE ID\n      title: item.title,\n      link: item.link,\n      published: item.pubDate,\n      description: description,\n      severityScore: severityScore,\n      severityLabel: severityLabel\n    });\n  });\n\n  // Find CVEs that are only in detailed list (unmatched)\n  const unmatchedCVEs = Array.from(detailedMap.keys()).filter(cve => !simpleCVEs.has(cve));\n\n  // Get the full details for unmatched CVEs\n  const unmatchedDetails = unmatchedCVEs.map(cve => detailedMap.get(cve));\n\n  // Return the unmatched details as n8n-compatible output\n  return unmatchedDetails.map(detail => ({ json: detail }));\n}\n\n// Execute the function\nreturn main();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        480,
        112
      ],
      "id": "e6871d79-b2ff-454c-9d1b-ecd85d0d27cd",
      "name": "Code"
    },
    {
      "parameters": {
        "operation": "delete",
        "documentId": {
          "__rl": true,
          "value": "1gVS5xIX80gvxKv65T8lnquQoUE5Rh5jQVJeg6PWM7H8",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1gVS5xIX80gvxKv65T8lnquQoUE5Rh5jQVJeg6PWM7H8/edit#gid=0"
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        640,
        112
      ],
      "id": "8f8c8681-8a78-436c-a818-ed3694497b2c",
      "name": "Delete rows or columns from sheet",
      "executeOnce": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "fYlxjAt6tl6MuBCV",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=NEW CVE FOUND !!\n\nCVE ID : {{ $json.cve_id }}\nSEVERITY SCORE : {{ $json.severityScore }}\nSEVERITY LEVEL : {{ $json.severityLabel }}\nBRIEF : {{ $json.title }}\nLINK : {{ $json.link }}\nPUBLISHED DATE : {{ $json.published }}\nDESCRIPTION : {{ $json.description }}",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        816,
        112
      ],
      "id": "9dbf4b3a-564f-4a70-8bbb-eb62f293a709",
      "name": "Discord",
      "webhookId": "e980a2fe-2ec5-4344-800e-a782fa37b13e",
      "credentials": {
        "discordWebhookApi": {
          "id": "eY3iLTsibKs7lJzJ",
          "name": "Discord Webhook account"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1gVS5xIX80gvxKv65T8lnquQoUE5Rh5jQVJeg6PWM7H8",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1gVS5xIX80gvxKv65T8lnquQoUE5Rh5jQVJeg6PWM7H8/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "cve_id": "={{ $json.cveId }}"
          },
          "matchingColumns": [
            "cve_id"
          ],
          "schema": [
            {
              "id": "cve_id",
              "displayName": "cve_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1040,
        224
      ],
      "id": "3912b6a2-99fe-4475-9b52-99dab0a16e15",
      "name": "Append or update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "fYlxjAt6tl6MuBCV",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        240,
        112
      ],
      "id": "157e8c19-d5c3-4613-98bf-46ce78b5ed58",
      "name": "Merge"
    },
    {
      "parameters": {
        "content": "This node fetches data from google sheet.\n\nRequired to configure google credentials.",
        "width": 288,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -144,
        -96
      ],
      "id": "9eb86d54-a26f-4b5b-a93d-e2f6e5361be5",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\nThis node fetches new CVE data from feed",
        "width": 288,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -96,
        272
      ],
      "id": "bbe4ae7e-0f58-4c28-9787-25af3c2b31a8",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "This node will help in parallelexecution of previous nodes",
        "width": 224,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        176,
        48
      ],
      "id": "1ef90d29-80b5-4dcf-8915-f19b427eef93",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Fetch latest CVE data from feed and generate alert on Discord channel.\n\n\n\n\n\n\n",
        "height": 928,
        "width": 1680,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -400,
        -288
      ],
      "id": "6f339893-ac60-4ab3-8f8d-a5e9e098a431",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\ncustom JS code for magic stuff",
        "height": 208,
        "width": 150
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        448,
        112
      ],
      "id": "6ebddbd6-3c36-4185-9c77-7805eca24fce",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "deletes  old data from sheet\n\n\nreuires google creds\n",
        "height": 208,
        "width": 150,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        624,
        0
      ],
      "id": "ab0a584e-ec6e-4711-bf45-53305c955274",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\nSends message to discord channel (webhook configuration)",
        "height": 240,
        "width": 150,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        800,
        112
      ],
      "id": "390717c3-e11a-48a4-9903-22fb37d17159",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "Updates sheet for current new CVEs data.",
        "height": 208,
        "width": 150,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1008,
        128
      ],
      "id": "fa522614-a054-434e-8ce4-3d207a56091d",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "jsCode": "// Assuming the data is coming from the previous n8n node as an array of items\n// In n8n Code node, use this script to extract CVE IDs\n\n// If previous node outputs multiple items (one per CVE entry)\nconst items = $input.all();\n\nconst extractedCVEs = items.map(item => {\n  const title = item.json.title;\n  // Use regex to extract CVE ID from title (e.g., \"CVE-2025-9173 - ...\")\n  const match = title.match(/^CVE-\\d{4}-\\d{4,}/);\n  return {\n    json: {\n      cveId: match ? match[0] : null\n    }\n  };\n});\n\n// Filter out any null values if needed\nreturn extractedCVEs.filter(entry => entry.json.cveId !== null);\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        336,
        304
      ],
      "id": "c1c57d3d-6c1d-401b-b925-ff43399e3302",
      "name": "Code1"
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\nanother magic code",
        "height": 208,
        "width": 150
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        320,
        304
      ],
      "id": "d513077f-51f9-4d7b-b624-23dcc7c7621c",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -272,
        224
      ],
      "id": "ff78d800-19c0-49d7-bbf7-bed062e35e4f",
      "name": "Schedule Trigger"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "get_data",
            "type": "main",
            "index": 0
          },
          {
            "node": "get_cve",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_data": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_cve": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          },
          {
            "node": "Delete rows or columns from sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Discord": {
      "main": [
        []
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Append or update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "get_data",
            "type": "main",
            "index": 0
          },
          {
            "node": "get_cve",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "e94e453d-3f33-42dd-991b-10ac38eb98b4",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ded5ab8bebf9924d68495cfd8982c4c9158c5a93647f20bea6df1d8aefc1cea4"
  },
  "id": "C86XfxXhH0DB8fs0",
  "tags": []
}
